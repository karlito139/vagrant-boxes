# 

#!/bin/bash -eux

MYSQL_ROOT_PASS="supertuxpowa" # Put yours


#install nginx mariaDB php
export DEBIAN_FRONTEND=noninteractive
debconf-set-selections <<< 'mariadb-server-10.0 mysql-server/root_password password $MYSQL_ROOT_PASS'
debconf-set-selections <<< 'mariadb-server-10.0 mysql-server/root_password_again password $MYSQL_ROOT_PASS'


apt-get -y install nginx
apt-get -y install mariadb-server
apt-get -y install php5-common php5-cli php5-fpm php5-mysqlnd


debconf-set-selections <<< 'phpmyadmin phpmyadmin/reconfigure-webserver multiselect'
debconf-set-selections <<< 'phpmyadmin phpmyadmin/dbconfig-install boolean false'
debconf-set-selections <<< 'phpmyadmin phpmyadmin/mysql/admin-user string root'
debconf-set-selections <<< 'phpmyadmin phpmyadmin/mysql/admin-pass password $MYSQL_ROOT_PASS'
debconf-set-selections <<< 'phpmyadmin phpmyadmin/mysql/app-pass password $MYSQL_ROOT_PASS'
debconf-set-selections <<< 'phpmyadmin phpmyadmin/app-password-confirm password $MYSQL_ROOT_PASS'

apt-get -y install phpmyadmin



cat <<EOF > /etc/nginx/sites-available/default
##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
  listen 80 default_server;
  listen [::]:80 default_server;

  # SSL configuration
  #
  # listen 443 ssl default_server;
  # listen [::]:443 ssl default_server;
  #
  # Self signed certs generated by the ssl-cert package
  # Don't use them in a production server!
  #
  # include snippets/snakeoil.conf;

  root /var/www/html;

  # Add index.php to the list if you are using PHP
  index index.html index.htm index.nginx-debian.html;

  server_name _;

  location / {
    # First attempt to serve request as file, then
    # as directory, then fall back to displaying a 404.
    try_files $uri $uri/ =404;
  }

  # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
  #
  #location ~ \.php$ {
  # include snippets/fastcgi-php.conf;
  #
  # # With php5-cgi alone:
  # fastcgi_pass 127.0.0.1:9000;
  # # With php5-fpm:
  # fastcgi_pass unix:/var/run/php5-fpm.sock;
  #}

  # deny access to .htaccess files, if Apache's document root
  # concurs with nginx's one
  #
  #location ~ /\.ht {
  # deny all;
  #}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
# listen 80;
# listen [::]:80;
#
# server_name example.com;
#
# root /var/www/example.com;
# index index.html;
#
# location / {
#   try_files $uri $uri/ =404;
# }
#}
EOF


systemctl restart nginx.service                                                                                                                                                                              ?
systemctl restart php5-fpm.service
systemctl restart mysql.service
